Shader{
	name = "cc.brcosa.shl",
	description = [[ BRightness / COntrast / SAturation shader ]],
	language = "GLSL",
	
	parameters = {
		Parameter{
			{0.62, 0.62, 0.62},
			name = "avgluma", type = "vec3", 
			description =  "base luminance value",
		},
		
		Parameter{
			1.,
			name = "brightness", type = "float", 
			description =  "brightness value",
		},
		
		Parameter{
			1.,
			name = "contrast", type = "float", 
			description =  "contrast value",
		},
		
		Parameter{
			1.,
			name = "saturation", type = "float", 
			description =  "saturation value",
		},
		
		Parameter{
			1.,
			name = "alpha", type = "float", 
			description =  "???",
		},
		
		Parameter{
			0,
			name = "image", type = "int",
			description = "Input texture",
		},
	},

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Vertex Program
--------------------------------------------------------------------------
Program{
	type = "vertex",
	
	[[

varying vec2 texcoord;

void main (void) {
    gl_Position = ftransform();
    texcoord = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
}

	]]
},
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Fragment Program
--------------------------------------------------------------------------
Program{
	type = "fragment",

	[[

const vec3 LumCoeff = vec3 (0.2125, 0.7154, 0.0721);

varying vec2 texcoord;
uniform sampler2D image;

uniform vec3 avgluma;
uniform float saturation;
uniform float contrast;
uniform float brightness;
uniform float alpha;

void main (void) {
	vec3 texColor  	= texture2D(image, texcoord).rgb;
	vec3 intensity 	= vec3 (dot(texColor, LumCoeff));
	vec3 color     	= mix(intensity, texColor, saturation);
	color          	= mix(avgluma, color, contrast);
	color			*= brightness;
	gl_FragColor   	= vec4 (color, color.g*alpha);
}

	]],
},

--------------------------------------------------------------------------
}