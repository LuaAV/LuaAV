Shader
{
	name = "cf.gaussian.2p.shl",
	description = [[ Two-pass Gaussian blur ]],
	language = "GLSL",
	
	parameters = {
		Parameter {
			{2, 0},
			name = "width", type = "vec2", 
			description =  "Width of convolution kernel",
		},
		
		Parameter {
			1,
			name = "scale", type = "float",
			description = "Output scale",
		},
		
		Parameter {
			0,
			name = "image", type = "int",
			description = "Input texture",
		},
	},

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Vertex Program
--------------------------------------------------------------------------
Program {
	type = "vertex",
	
	[[

uniform vec2 width;

varying vec2 texcoordM;
varying vec2 texcoordB0;
varying vec2 texcoordF0;
varying vec2 texcoordB1;
varying vec2 texcoordF1;
varying vec2 texcoordB2;
varying vec2 texcoordF2;

void main() {
	// perform standard transform on vertex
	gl_Position = ftransform();

	// transform texcoord	
	vec2 texcoord = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	vec2 amt = width;

	// get sample positions
    texcoordM = texcoord;
    texcoordB0 = texcoord - amt;
    texcoordF0 = texcoord + amt;
    texcoordB1 = texcoord - amt * 2.0;
    texcoordF1 = texcoord + amt * 2.0;
    texcoordB2 = texcoord - amt * 3.0;
    texcoordF2 = texcoord + amt * 3.0;
}

	]]
},
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Fragment Program
--------------------------------------------------------------------------
Program {
	type = "fragment",

	[[

uniform sampler2D image;

varying vec2 texcoordM;
varying vec2 texcoordB0;
varying vec2 texcoordF0;
varying vec2 texcoordB1;
varying vec2 texcoordF1;
varying vec2 texcoordB2;
varying vec2 texcoordF2;

uniform float scale;

void main() {
    vec4 sampleM  = texture2D(image, texcoordM);
    vec4 sampleB0 = texture2D(image, texcoordB0);
    vec4 sampleF0 = texture2D(image, texcoordF0);
    vec4 sampleB1 = texture2D(image, texcoordB1);
    vec4 sampleF1 = texture2D(image, texcoordF1);
    vec4 sampleB2 = texture2D(image, texcoordB2);
    vec4 sampleF2 = texture2D(image, texcoordF2);

    gl_FragColor =	0.1752 * sampleM + 
    				0.1658 * (sampleB0 + sampleF0) + 
    				0.1403 * (sampleB1 + sampleF1) + 
    				0.1063 * (sampleB2 + sampleF2);

    gl_FragColor *= scale;
}

	]],
},

--------------------------------------------------------------------------
}