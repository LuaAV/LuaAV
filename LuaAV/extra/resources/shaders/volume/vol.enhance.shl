Shader
{
	name = "raycast.shl",
	description = [[ raycast shader ]],
	language = "GLSL",
	
	parameters =
	{	
		Parameter
		{
			0,
			name = "image3D", type = "INT", 
			description =  "3d texture data",
		},
				

	},

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Vertex Program
--------------------------------------------------------------------------
Program
{
	type = "vertex",
	
	[[


varying vec4 TexCoord0; 

void main (void)

{
	TexCoord0 = vec4(gl_TextureMatrix[0] * gl_MultiTexCoord0);  
    gl_Position = ftransform();
}

	]]
},
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Fragment Program
--------------------------------------------------------------------------
Program
{
	type = "fragment",	--must be defined

	[[


uniform sampler3D image3D; 
varying vec4 TexCoord0; 

void main (void)
{
    vec4 col; 
	col = texture3D(image3D, TexCoord0.xyz);
	col.xyz = col.xyz * 5.0;
	
	gl_FragColor =  col;

  
}

	]],
},

--------------------------------------------------------------------------
}