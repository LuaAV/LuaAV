Shader{
	name = "cf.normalmap.shl",
	description = [[ x-fader ]],
	language = "GLSL",
	
	parameters = {
		Parameter{
			0,
			name = "tex0", type = "int",
			description = "A source",
		},
	},

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Vertex Program
--------------------------------------------------------------------------
Program{
	type = "vertex",
	
	[[

varying vec2 texcoord0;

void main (void)
{
    gl_Position = ftransform();
	texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
}

	]]
},
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Fragment Program
--------------------------------------------------------------------------
Program{
	type = "fragment",

	[[

// texcoords
varying vec2 texcoord0;

// samplers
uniform sampler2D tex0;

void main() {
	vec4 c00 = texture2D(tex0, texcoord0+vec2(-1., -1.));
	vec4 c10 = texture2D(tex0, texcoord0+vec2(0., -1.));
	vec4 c20 = texture2D(tex0, texcoord0+vec2(1., -1.));
	
	vec4 c01 = texture2D(tex0, texcoord0+vec2(-1., 0.));
	vec4 c11 = texture2D(tex0, texcoord0);
	vec4 c21 = texture2D(tex0, texcoord0+vec2(1., 0.));
	
	vec4 c02 = texture2D(tex0, texcoord0+vec2(-1., 1.));
	vec4 c12 = texture2D(tex0, texcoord0+vec2(0., 1.));
	vec4 c22 = texture2D(tex0, texcoord0+vec2(1., 1.));
	
	gl_FragColor.r =	c20.r - c00.r + 
						c21.r - c01.r + 
						c22.r - c02.r;
	
	gl_FragColor.g =	c00.r - c02.r + 
						c10.r - c12.r + 
						c20.r - c22.r;
	
	
	gl_FragColor.b = c11.r;
	gl_FragColor.a = 1.;
	
	gl_FragColor = (gl_FragColor+1.)*0.5;
}

	]],
},

--------------------------------------------------------------------------
}