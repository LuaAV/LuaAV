Shader{
	name = "vol.test.shl",
	description = [[ Volume rendering test shader ]],
	language = "GLSL",
	
	parameters =
	{
		
		Parameter {
			0,
			name = "first", type = "int",
			description = "first texture",
		},
		
		Parameter {
			1,
			name = "second", type = "int",
			description = "second texture file",
		},
		
		
	},

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Vertex Program
--------------------------------------------------------------------------
Program{
	type = "vertex",
	
	[[

varying vec4 ftpos;

void main() {
	ftpos = ftransform();
	gl_Position = ftpos;
	
}

	]]
},
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Fragment Program
--------------------------------------------------------------------------
Program{
	type = "fragment",	--must be defined

	[[

varying vec4 ftpos;


uniform sampler2D first;
uniform sampler2D second;

void main() {
	vec2 texcoord = 0.5*((ftpos.xy/ftpos.w)+1.);

	vec4 first_smp = texture2D(first, texcoord);
	vec4 second_smp = texture2D(second, texcoord);
	
	vec4 remainder;
	
	remainder.a = (1.0 - first_smp.a);
	remainder.r = (1.0 - first_smp.r);
	remainder.g = (1.0 - first_smp.g);
	remainder.b = (1.0 - first_smp.b);
	
	vec4 additive;
	
	additive.a = min(remainder.a, second_smp.a);
	additive.r = min(remainder.r, second_smp.r);
	additive.g = min(remainder.g, second_smp.g);
	additive.b = min(remainder.b, second_smp.b);

	vec4 summ = first_smp + additive;
	
	gl_FragColor = summ;
	

}

	]],
},

--------------------------------------------------------------------------
}