#ifdef ASTSTART
__ASTSTART = DIAG_START_AST,
#undef ASTSTART
#endif

DIAG(err_asm_empty_symbolic_operand_name, CLASS_ERROR, diag::MAP_ERROR, "empty symbolic operand name in inline assembly string", 0, true, 4)
DIAG(err_asm_invalid_escape, CLASS_ERROR, diag::MAP_ERROR, "invalid %% escape in inline assembly string", 0, true, 4)
DIAG(err_asm_invalid_operand_number, CLASS_ERROR, diag::MAP_ERROR, "invalid operand number in inline asm string", 0, true, 4)
DIAG(err_asm_unknown_symbolic_operand_name, CLASS_ERROR, diag::MAP_ERROR, "unknown symbolic operand name in inline assembly string", 0, true, 4)
DIAG(err_asm_unterminated_symbolic_operand_name, CLASS_ERROR, diag::MAP_ERROR, "unterminated symbolic operand name in inline assembly string", 0, true, 4)
DIAG(err_odr_function_type_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "external function %0 declared with incompatible types in different translation units (%1 vs. %2)", 0, true, 0)
DIAG(err_odr_ivar_type_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)", 0, true, 0)
DIAG(err_odr_objc_method_num_params_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)", 0, true, 0)
DIAG(err_odr_objc_method_param_type_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)", 0, true, 0)
DIAG(err_odr_objc_method_result_type_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)", 0, true, 0)
DIAG(err_odr_objc_method_variadic_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another", 0, true, 0)
DIAG(err_odr_objc_property_type_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "property %0 declared with incompatible types in different translation units (%1 vs. %2)", 0, true, 0)
DIAG(err_odr_objc_superclass_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "class %0 has incompatible superclasses", 0, true, 0)
DIAG(err_odr_variable_multiple_def, CLASS_ERROR, diag::MAP_ERROR, "external variable %0 defined in multiple translation units", 0, true, 0)
DIAG(err_odr_variable_type_inconsistent, CLASS_ERROR, diag::MAP_ERROR, "external variable %0 declared with incompatible types in different translation units (%1 vs. %2)", 0, true, 0)
DIAG(err_unsupported_ast_node, CLASS_ERROR, diag::MAP_ERROR, "cannot import unsupported AST node %0", 0, true, 0)
DIAG(note_expr_divide_by_zero, CLASS_NOTE, diag::MAP_FATAL, "division by zero", 0, true, 0)
DIAG(note_odr_base, CLASS_NOTE, diag::MAP_FATAL, "class has base type %0", 0, true, 0)
DIAG(note_odr_bit_field, CLASS_NOTE, diag::MAP_FATAL, "bit-field %0 with type %1 and length %2 here", 0, true, 0)
DIAG(note_odr_defined_here, CLASS_NOTE, diag::MAP_FATAL, "also defined here", 0, true, 0)
DIAG(note_odr_enumerator, CLASS_NOTE, diag::MAP_FATAL, "enumerator %0 with value %1 here", 0, true, 0)
DIAG(note_odr_field, CLASS_NOTE, diag::MAP_FATAL, "field %0 has type %1 here", 0, true, 0)
DIAG(note_odr_missing_base, CLASS_NOTE, diag::MAP_FATAL, "no corresponding base class here", 0, true, 0)
DIAG(note_odr_missing_enumerator, CLASS_NOTE, diag::MAP_FATAL, "no corresponding enumerator here", 0, true, 0)
DIAG(note_odr_missing_field, CLASS_NOTE, diag::MAP_FATAL, "no corresponding field here", 0, true, 0)
DIAG(note_odr_not_bit_field, CLASS_NOTE, diag::MAP_FATAL, "field %0 is not a bit-field", 0, true, 0)
DIAG(note_odr_number_of_bases, CLASS_NOTE, diag::MAP_FATAL, "class has %0 base %plural{1:class|:classes}0", 0, true, 0)
DIAG(note_odr_objc_method_here, CLASS_NOTE, diag::MAP_FATAL, "%select{class|instance}0 method %1 also declared here", 0, true, 0)
DIAG(note_odr_objc_missing_superclass, CLASS_NOTE, diag::MAP_FATAL, "no corresponding superclass here", 0, true, 0)
DIAG(note_odr_objc_superclass, CLASS_NOTE, diag::MAP_FATAL, "inherits from superclass %0 here", 0, true, 0)
DIAG(note_odr_tag_kind_here, CLASS_NOTE, diag::MAP_FATAL, "%0 is a %select{struct|union|class|enum}1 here", 0, true, 0)
DIAG(note_odr_value_here, CLASS_NOTE, diag::MAP_FATAL, "declared here with type %0", 0, true, 0)
DIAG(note_odr_virtual_base, CLASS_NOTE, diag::MAP_FATAL, "%select{non-virtual|virtual}0 derivation here", 0, true, 0)
DIAG(warn_odr_tag_type_inconsistent, CLASS_WARNING, diag::MAP_WARNING, "type %0 has incompatible definitions in different translation units", 0, true, 0)
